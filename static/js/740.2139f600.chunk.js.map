{"version":3,"file":"static/js/740.2139f600.chunk.js","mappings":"6LAAO,IAAMA,EAAW,gCACXC,EAAS,kC,+JCCTC,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAYD,EAAAA,GAAAA,IAAH,8CAITE,EAAiBF,EAAAA,GAAAA,IAAH,iI,kBCNrBG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,iQAeHK,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,SCuCD,EA1DqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,wGACFC,MAAM,GAAD,OAAIzB,EAAAA,EAAJ,iBAAqBY,EAArB,oBAAwCX,EAAAA,IAD3C,cACfyB,EADe,gBAEMA,EAAKC,OAFX,OAEfC,EAFe,OAIrBR,EAAgBQ,GACVC,EAAcD,EAAaP,OAC9BS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACTC,KAAK,KACRX,EAAUO,GARW,2CAAH,qDAUpBL,IAAiBU,MAAMC,QAAQC,MAChC,GAAE,CAACxB,IAEJ,IAAMyB,EAAQC,KAAKC,KAAiC,GAA5BpB,EAAaqB,cAErC,OACE,6BACE,SAAChC,EAAD,CAAUC,GAAIK,EAAd,sBACA,UAACZ,EAAD,YACE,gBACEuC,IAAG,0CAAqCtB,EAAauB,aACrDC,IAAG,UAAKxB,EAAayB,eAAlB,oBAEL,UAACxC,EAAD,YACE,wBAAKe,EAAayB,kBAClB,wCAAgBP,EAAhB,QACA,sCACA,uBAAIlB,EAAa0B,YACjB,oCACA,uBAAIxB,WAGR,UAAChB,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMI,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAqC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/fetchKey.js","components/MovieDetails.styled.js","components/BackLink.js","pages/MovieDetails.js"],"sourcesContent":["export const fetchUrl = 'https://api.themoviedb.org/3/';\nexport const apiKey = '5cf0dee0ec7204706502781114ed57ea';\n","import styled from 'styled-components';\n\nexport const MovieCard = styled.div`\n  display: flex;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 30px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 10px 0;\n  border-top: 1px solid gray;\n  border-bottom: 1px solid gray;\n  margin-top: 5px;\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-size: 15px;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: #b00b69;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"15\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { MovieCard, MovieInfo, AdditionalInfo} from '../components/MovieDetails.styled';\nimport { BackLink } from '../components/BackLink';\nimport { fetchUrl, apiKey } from '../api/fetchKey';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [movieFetched, setMovieFetched] = useState({});\n  const [genres, setGenres] = useState('');\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      const data = await fetch(`${fetchUrl}movie/${movieId}?api_key=${apiKey}`);\n      const movieFromApi = await data.json();\n\n      setMovieFetched(movieFromApi);\n      const movieGenres = movieFromApi.genres\n        .map(genre => genre.name)\n        .join(' ');\n      setGenres(movieGenres);\n    };\n    fetchMovieById().catch(console.error);\n  }, [movieId]);\n\n  const score = Math.ceil(movieFetched.vote_average * 10);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <MovieCard>\n        <img\n          src={`https://image.tmdb.org/t/p/w342/${movieFetched.poster_path}`}\n          alt={`${movieFetched.original_title} movie poster`}\n        />\n        <MovieInfo>\n          <h2>{movieFetched.original_title}</h2>\n          <p>User score: {score}%</p>\n          <h4>Overview</h4>\n          <p>{movieFetched.overview}</p>\n          <h5>Genres</h5>\n          <p>{genres}</p>\n        </MovieInfo>\n      </MovieCard>\n      <AdditionalInfo>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchUrl","apiKey","MovieCard","styled","MovieInfo","AdditionalInfo","StyledLink","Link","BackLink","to","children","size","movieId","useParams","backLinkHref","useLocation","state","from","useState","movieFetched","setMovieFetched","genres","setGenres","useEffect","fetchMovieById","fetch","data","json","movieFromApi","movieGenres","map","genre","name","join","catch","console","error","score","Math","ceil","vote_average","src","poster_path","alt","original_title","overview","Suspense","fallback"],"sourceRoot":""}