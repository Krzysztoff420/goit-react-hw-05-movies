{"version":3,"file":"static/js/541.8623293d.chunk.js","mappings":"wNAoCA,UAhCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACL,IAAMC,EAAS,mCAAG,sGACDC,MAAM,GAAD,OAAIC,EAAAA,EAAJ,kBAAsBL,EAAtB,4BAAiDM,EAAAA,IADrD,cACbC,EADa,gBAEGA,EAAIC,OAFP,OAEbC,EAFa,OAInBV,EAAQU,EAAQX,MAJG,2CAAH,qDAMlBK,IAAYO,MAAMC,QAAQC,MAC3B,GAAE,CAACZ,KAGF,8BACE,wBACGF,EAAKe,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAG,UAAKH,EAAMI,SAEhB,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,eANdL,EAAMM,GADF,OAatB,C,4EClCM,IAAMf,EAAW,gCACXC,EAAS,kC,sBCDtB,SAASe,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOlB,GAEP,YADAY,EAAOZ,EAET,CAEIiB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.js","components/api/fetchKey.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchUrl, apiKey } from 'components/api/fetchKey';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n       const fetchCast = async () => {\n      const res = await fetch(`${fetchUrl}/movie/${movieId}/credits?api_key=${apiKey}`);\n      const resBody = await res.json();\n\n      setCast(resBody.cast);\n    };\n    fetchCast().catch(console.error);\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w45/${actor.profile_path}`}\n              alt={`${actor.name}`}\n            ></img>\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast;\n","export const fetchUrl = 'https://api.themoviedb.org/3/';\nexport const apiKey = '5cf0dee0ec7204706502781114ed57ea';","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchCast","fetch","fetchUrl","apiKey","res","json","resBody","catch","console","error","map","actor","src","profile_path","alt","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}